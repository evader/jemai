\n#!/bin/bash\nset -e\n\necho \"=== [JEM AI] Open WebUI + GPT-4 Integration Script ===\"\n\n# 1. Identify the main/healthy Open WebUI container (using port 8080)\nmain_id=$(docker ps --filter \"ancestor=ghcr.io/open-webui/open-webui:main\" --filter \"publish=8080\" --format \"{{.ID}}\" | head -n1)\nif [[ -z \"$main_id\" ]]; then\n  echo \"[ERROR] No running Open WebUI container found on port 8080. Please start one with:\"\n  echo \"  docker run -d -p 8080:8080 --name open-webui ghcr.io/open-webui/open-webui:main\"\n  exit 1\nfi\n\necho \"[INFO] Main Open WebUI container: $main_id\"\n\n# 2. Stop/remove any extra Open WebUI containers\nall_ids=$(docker ps --filter \"ancestor=ghcr.io/open-webui/open-webui:main\" --format \"{{.ID}}\")\nfor cid in $all_ids; do\n  if [[ \"$cid\" != \"$main_id\" ]]; then\n    echo \"[INFO] Stopping duplicate Open WebUI container: $cid\"\n    docker stop \"$cid\"\n    docker rm \"$cid\"\n  fi\ndone\n\n# 3. Find Open WebUI data volume\nopenwebui_vol=\"\"\nfor vol in $(docker volume ls -q); do\n  if docker volume inspect \"$vol\" | grep -q \"openwebui\"; then\n    openwebui_vol=\"$vol\"\n    break\n  fi\ndone\n\nif [[ -z \"$openwebui_vol\" ]]; then\n  echo \"[ERROR] Could not find Open WebUI data volume. Please check your Docker setup.\"\n  exit 1\nfi\n\nmount_dir=$(docker volume inspect \"$openwebui_vol\" | grep Mountpoint | awk -F'\"' '{print $4}')\necho \"[INFO] Open WebUI data dir: $mount_dir\"\n\n# 4. Ensure config.json exists (create admin user: admin@example.com / password: admin, allow all logs)\ncat > \"$mount_dir/config.json\" <<'JEMCONF'\n{\n  \"users\": [\n    {\n      \"email\": \"admin@example.com\",\n      \"password\": \"admin\",\n      \"role\": \"admin\",\n      \"active\": true\n    }\n  ],\n  \"settings\": {\n    \"model\": \"gpt-4\",        // default model for all users\n    \"allowLogs\": true,       // make logs visible to all\n    \"adminOpen\": true        // open admin access\n  }\n}\nJEMCONF\n\nchmod 600 \"$mount_dir/config.json\"\necho \"[INFO] Wrote config.json with admin:admin and logs open.\"\n\n# 5. Make sure GPT-4 model is downloaded and registered in Ollama\nif ! ollama list | grep -q 'gpt-4'; then\n  echo \"[INFO] Pulling GPT-4 (or GPT-4-like) model for Ollama...\"\n  ollama pull gpt-4 || ollama pull llama3 || echo \"[WARN] Could not auto-download GPT-4 model. Please check your Ollama models.\"\nfi\n\n# 6. Restart Open WebUI container to reload config and model list\necho \"[INFO] Restarting Open WebUI to apply config...\"\ndocker restart \"$main_id\"\n\necho \"=== All Done! ===\"\necho\necho \"Open WebUI is ready at: http://localhost:8080/\"\necho \"Login as: admin@example.com  password: admin\"\necho \"Default model: gpt-4 (or fallback). All users, all logs, full admin access.\"\necho\necho \"If you ever want to reset, just re-run this script.\"\n