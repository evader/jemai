// Pass originalCommand only once when creating the jobElement.
            // Subsequent calls to updateJobUI should only update the outputContent.
            // We'll manage final_status separately.

            // This function now primarily creates/initializes the job display.
            // For updates, the 'output' event listener will fetch the jobElement by ID and update its content.
            function updateJobUI(jobId, originalCommand /* used only for initial setup */, type, status, currentOutputContent) {
                let jobElement = jobElements[jobId];
                if (!jobElement) {
                    jobElement = document.createElement('div');
                    jobElement.className = 'log-entry';
                    jobElement.id = jobId;
                    outputDiv.prepend(jobElement); // Insert at the top
                    jobElements[jobId] = jobElement; // Store reference
                     
                    // ONLY SET COMMAND TEXT AND TYPE ONCE
                    jobElement.dataset.command = originalCommand; // Store original command
                    jobElement.dataset.type = type; // Store original type
                }

                // Update the status badge and command line (which has status badge)
                const promptClass = `prompt-${type.replace('_', '-')}`;
                const statusClass = (status === 'running' || status === 'thinking') ? 'status-thinking' : (status === 'complete' ? 'status-complete' : 'status-error'); // Status class logic
                
                jobElement.innerHTML = `
                    <p class="prompt-line ${promptClass}">&nbsp; ${originalCommand} <span class="status-badge ${statusClass}">${status.toUpperCase()}</span></p>
                    <div class="output-pre">${currentOutputContent.replace(/</g, "&lt;").replace(/>/g, "&gt;")}</div>
                `;
                
                const preElement = jobElement.querySelector('.output-pre');
                if (preElement) {
                    preElement.scrollTop = preElement.scrollHeight; // Auto-scroll
                }
            }