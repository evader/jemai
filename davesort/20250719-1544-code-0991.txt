\ncat <<'EOF' >> ~/synapz_super_bootstrap.sh\n# 10. Systemd Service: Auto-restart, self-heal, logging\nsudo tee $SERVICE_FILE >/dev/null <<SERVICE\n[Unit]\nDescription=Synapz Core Autonomous Agent\nAfter=network.target docker.service\n\n[Service]\nUser=$USER\nWorkingDirectory=$APP_DIR\nExecStart=$APP_DIR/venv/bin/python3 $APP_DIR/synapz_core.py\nRestart=always\nRestartSec=5\nEnvironment=\"PYTHONUNBUFFERED=1\"\nStandardOutput=append:$APP_DIR/synapz_core.log\nStandardError=append:$APP_DIR/synapz_core_error.log\n\n[Install]\nWantedBy=multi-user.target\nSERVICE\n\nsudo systemctl daemon-reload\nsudo systemctl enable synapz_core\nsudo systemctl restart synapz_core\n\n# 11. Healthcheck/Auto-heal Timer\nsudo tee /etc/systemd/system/synapz_monitor.timer >/dev/null <<TIMER\n[Unit]\nDescription=Synapz Auto-heal/Monitor Timer\n\n[Timer]\nOnBootSec=2min\nOnUnitActiveSec=2min\n\n[Install]\nWantedBy=timers.target\nTIMER\n\nsudo tee /etc/systemd/system/synapz_monitor.service >/dev/null <<MON\n[Unit]\nDescription=Monitor and Auto-restart Synapz Core if unhealthy\n\n[Service]\nType=oneshot\nExecStart=/bin/bash -c '[ \\$(systemctl is-active synapz_core) = \"active\" ] || sudo systemctl restart synapz_core'\nMON\n\nsudo systemctl daemon-reload\nsudo systemctl enable synapz_monitor.timer\nsudo systemctl start synapz_monitor.timer\n\n# 12. Warmwinds Integration Placeholder (future expansion)\nif ! grep -q 'alias warmwinds=' $JEMAI_ALIAS_FILE 2>/dev/null; then\n  echo \"alias warmwinds='echo Warmwinds AI hooks ready for future connection'\" >> $JEMAI_ALIAS_FILE\nfi\n\n# 13. Final System Cleanup & Friendly Output\necho \"\u2705 Synapz Super Bootstrap is COMPLETE.\"\necho \"\ud83c\udf10 Open WebUI: http://localhost:$OPENWEBUI_PORT\"\necho \"\ud83d\udce6 Portainer: http://localhost:$PORTAINER_PORT\"\necho \"\ud83d\udda5\ufe0f VS Code: code .   or via browser: http://localhost:8443 (if you install code-server)\"\necho \"\ud83e\udd16 jemai: run 'jemai' in any shell\"\necho \"\ud83d\udee0\ufe0f Synapz Log: 'synapz-log'\"\necho \"\ud83e\uddbe Synapz API: 'synapz-api'\"\necho \"\ud83d\udd01 Auto-healing and watchdog enabled\"\necho \"\ud83d\udee1\ufe0f Error recovery, logging, and full access granted\"\n\nEOF\n