\\n    cd /opt/ai_offline_setup/ubuntu_debs\\n    sudo dpkg -i *.deb # This might fail if dependencies are not ordered correctly\\n    # Better: Use `gdebi` for dependency resolution (but it needs to be installed first).\\n    # If dpkg fails repeatedly due to dependencies, you may need to install them in order or use:\\n    sudo apt install --fix-broken-install # This would require internet, so avoid.\\n    # Manual loop for dependency resolution:\\n    for deb in $(ls *.deb); do sudo dpkg -i \\\"$deb\\\"; done\\n    sudo apt --fix-broken install # This is the problem.\\n    # Workaround: Manually install the most basic first. `build-essential` is usually fine.\\n    # Try: sudo dpkg -i git_*.deb build-essential_*.deb # and other critical base ones\\n    # If you run into dpkg dependency hell and cannot connect to the internet AT ALL:\\n    # This is where the `--download-only` step above needs to be *extremely* comprehensive\\n    # or you might be forced to briefly enable internet for `sudo apt install -f`.\\n    # A cleaner solution is to set up a local apt repository using `apt-mirror` or `apt-cacher-ng`\\n    # if you are managing many offline machines, but that's beyond this scope.\\n    # For a single machine, ensure all deb files are present and try `sudo dpkg -i *` again.\\n    # If `dpkg` fails, try `sudo dpkg --install --recursive .` in the deb folder.\\n