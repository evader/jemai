\n#!/usr/bin/env python3\nimport subprocess\nimport requests\nimport sys\nimport threading\n\nOLLAMA_SOCKET = \"http://127.0.0.1:11434\"\nSYNAPZ_API = \"http://127.0.0.1:6000/api\"\n\ndef run_shell(cmd):\n    try:\n        return subprocess.check_output(cmd, shell=True, stderr=subprocess.STDOUT).decode()\n    except subprocess.CalledProcessError as e:\n        return f\"Error running command: {e.output.decode()}\"\n\ndef synapz_query(prompt):\n    try:\n        resp = requests.post(f\"{SYNAPZ_API}/query\", json={\"query\": prompt})\n        if resp.status_code == 200:\n            return resp.json().get(\"answer\", \"[Synapz Empty Response]\")\n        else:\n            return f\"[Synapz Error: {resp.status_code}]\"\n    except Exception as e:\n        return f\"[Synapz Connection Error: {e}]\"\n\ndef ollama_chat(model, prompt):\n    try:\n        resp = requests.post(f\"{OLLAMA_SOCKET}/v1/chat/completions\", json={\n            \"model\": model,\n            \"messages\": [{\"role\": \"user\", \"content\": prompt}],\n            \"temperature\": 0.7,\n        })\n        if resp.status_code == 200:\n            return resp.json()[\"choices\"][0][\"message\"][\"content\"]\n        else:\n            return f\"[Ollama Error: {resp.status_code}]\"\n    except Exception as e:\n        return f\"[Ollama Connection Error: {e}]\"\n\ndef is_shell_command(text):\n    shell_cmds = [\"ls\", \"cat\", \"cd\", \"pwd\", \"rm\", \"mv\", \"cp\", \"echo\", \"mkdir\", \"rmdir\", \"ps\", \"top\", \"htop\", \"df\", \"du\"]\n    return any(text.startswith(cmd) for cmd in shell_cmds)\n\ndef cli_loop():\n    model = \"llama3:latest\"  # default, can be dynamic\n    print(f\"Synapz-Ollama CLI. Model: {model}\")\n    print(\"Type shell commands directly or just chat. Ctrl+C to exit.\\n\")\n\n    while True:\n        try:\n            inp = input(\"> \").strip()\n            if inp.lower() in [\"exit\", \"quit\", \"q\"]:\n                print(\"Goodbye, Dave.\")\n                break\n            if is_shell_command(inp):\n                out = run_shell(inp)\n            elif inp.lower().startswith(\"synapz \"):\n                out = synapz_query(inp[len(\"synapz \"):])\n            else:\n                out = ollama_chat(model, inp)\n            print(out)\n        except KeyboardInterrupt:\n            print(\"\\nCtrl+C caught. Exiting CLI.\")\n            break\n        except Exception as e:\n            print(f\"[Unexpected Error] {e}\")\n\nif __name__ == \"__main__\":\n    cli_loop()\n