\nimport traceback, datetime\n\nclass JemaiAutoDebugger:\n    def __init__(self, parent):\n        self.parent = parent\n        self.logfile = \"jemai_build.log\"\n    \n    def log(self, msg):\n        t = datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n        with open(self.logfile, \"a\") as f:\n            f.write(f\"[{t}] {msg}\\n\")\n\n    def run(self, func, *args, **kwargs):\n        try:\n            self.log(f\"Running {func.__name__}...\")\n            result = func(*args, **kwargs)\n            self.log(f\"{func.__name__} succeeded.\")\n            return result\n        except Exception as e:\n            tb = traceback.format_exc()\n            self.log(f\"ERROR in {func.__name__}: {e}\\n{tb}\")\n            print(f\"\\n[ERROR] {func.__name__} failed: {e}\\n{tb}\")\n            # Self-heal logic here:\n            if \"pip\" in tb or \"import\" in tb:\n                print(\"Trying to auto-install missing Python modules...\")\n                self.parent.install_requirements()\n                return self.run(func, *args, **kwargs)\n            # ... add other fix attempts\n            choice = input(\"Retry (r), Ignore (i), Show logs (l), Exit (x)? \")\n            if choice.lower() == \"r\":\n                return self.run(func, *args, **kwargs)\n            elif choice.lower() == \"l\":\n                print(open(self.logfile).read())\n            elif choice.lower() == \"x\":\n                exit(1)\n            else:\n                print(\"Ignoring error.\")\n            return None\n\n    def smoke_test(self):\n        print(\"\\n=== JEMAI SYSTEM CHECK ===\")\n        tests = [\n            (\"Ollama up\", self.parent.test_ollama),\n            (\"Model load\", self.parent.test_model_load),\n            (\"Synapz ping\", self.parent.test_synapz),\n            (\"File ops\", self.parent.test_file_ops),\n            (\"Web UI\", self.parent.test_webui),\n            (\"TTS voice\", self.parent.test_tts),\n            (\"Home Assistant\", self.parent.test_ha),\n        ]\n        for desc, fn in tests:\n            try:\n                self.run(fn)\n                print(f\"\u2705 {desc}\")\n            except Exception as e:\n                print(f\"\u274c {desc}: {e}\")\n                # Attempt fix here if possible\n        print(\"=== CHECK COMPLETE ===\")\n\n# Use everywhere:\n# jemai_debugger.run(build_stuff)\n# jemai_debugger.smoke_test()\n