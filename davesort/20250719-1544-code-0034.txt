<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.0.0/socket.io.min.js"></script>
    <script>
        const socket = io();
        const contentArea = document.getElementById('main-content');
        const navButtons = document.querySelectorAll('#nav-bar button');

        // --- View Switching Logic ---
        function switchView(viewId) {
            document.querySelectorAll('.content-view').forEach(v => v.style.display = 'none');
            navButtons.forEach(b => b.classList.remove('active'));
            const newView = document.getElementById(viewId);
            const newButton = document.getElementById('nav-' + viewId.replace('-view', ''));
            if (newView) newView.style.display = 'flex';
            if (newButton) newButton.classList.add('active');
            
            if (viewId === 'docker-view') {
                const dockerStatusDiv = document.getElementById('docker-status');
                if (dockerStatusDiv) dockerStatusDiv.innerHTML = 'Loading Docker Status...';
                socket.emit('docker_agent', { command: 'list' });
            } else if (viewId === 'wiki-view') {
                const wikiViewDiv = document.getElementById('wiki-view');
                if (wikiViewDiv) wikiViewDiv.innerHTML = 'Loading Grand Wiki...';
                socket.emit('get_wiki_content', {});
            } else if (viewId === 'faq-view') {
                const faqViewDiv = document.getElementById('faq-view');
                if (faqViewDiv) faqViewDiv.innerHTML = 'Loading F***up FAQ...';
                socket.emit('get_faq_content', {});
            }
        }
        
        // --- UI Rendering Functions ---
        function renderConsole() {
            contentArea.innerHTML = `
                <div id="console-view" class="content-view">
                    <div id="chat-output"><div><strong>Synapz:</strong> Welcome to the JEM AI Unified Core. RAG is online. Ask me a question about our journey.</div></div>
                    <input id="chat-input" type="text" placeholder="Ask Synapz a question..." autofocus>
                </div>
            `;
            const chatInput = document.getElementById('chat-input');
            if (chatInput) {
                chatInput.addEventListener('keypress', e => {
                    if (e.key === 'Enter' && chatInput.value.trim()) {
                        const query = chatInput.value;
                        const chatOutput = document.getElementById('chat-output');
                        chatOutput.innerHTML += `<p><strong>You:</strong> ${query}</p>`;
                        socket.emit('query_rag', { query: query });
                        chatInput.value = '';
                        chatOutput.scrollTop = chatOutput.scrollHeight;
                    }
                });
            }
        }
        
        // --- Socket.IO Event Handlers ---
        socket.on('connect', () => {
             console.log('Connected to JEM AI Core');
             // Initial render on connect
             if (!document.querySelector('.content-view')) { // Only render if not already there
                 switchView('console-view'); // Default view
             }
        });

        socket.on('rag_response', data => {
            const chatOutput = document.getElementById('chat-output');
            if (chatOutput) {
                const responseText = data.error || data.response;
                chatOutput.innerHTML += `<p><strong>Synapz:</strong> ${responseText}</p>`;
                chatOutput.scrollTop = chatOutput.scrollHeight;
            }
        });
        
        socket.on('docker_response', data => {
            const dockerStatusDiv = document.getElementById('docker-status');
            if (dockerStatusDiv) {
                if (data.status === 'ok') {
                    let html = '';
                    data.data.forEach(c => {
                        html += `<div class="docker-container"><strong class="status-${c.status.toLowerCase()}">${c.name}</strong> - Status: ${c.status}</div>`;
                    });
                    dockerStatusDiv.innerHTML = html;
                } else {
                    dockerStatusDiv.innerText = `Error: ${data.data}`;
                }
            }
        });

        socket.on('wiki_content', data => {
            const wikiView = document.getElementById('wiki-view');
            if(wikiView) wikiView.innerHTML = data.html || `<p>Error loading wiki.</p>`;
        });
        
        socket.on('faq_content', data => {
            const faqView = document.getElementById('faq-view');
            if(faqView) faqView.innerHTML = data.html || `<p>Error loading FAQ.</p>`;
        });

        // --- Initial Setup ---
        // Setup nav buttons event listeners
        navButtons.forEach(btn => {
            btn.addEventListener('click', () => {
                const viewId = btn.id.replace('nav-', '') + '-view';
                switchView(viewId);
            });
        });

        // Global listener for actionable links (delegated event)
        document.addEventListener('click', function(e) {
            if (e.target && e.target.classList.contains('actionable-link')) {
                e.preventDefault();
                const command = e.target.getAttribute('data-command');
                // For simplicity, we'll just log this for now. A full implementation would emit this.
                console.log(`Actionable link clicked! Command: ${command}`);
                // In a future version, this would be:
                // socket.emit('execute_raw', { command: command });
                // switchView('console-view'); 
            }
        });

        // Initial render of the console
        renderConsole();
        switchView('console-view');
    </script>