Processing triggers for man-db (2.12.0-4build2) ...
Processing triggers for libc-bin (2.39-0ubuntu8.4) ...
  Attempting to fix broken installs. Any dependency errors means you likely missed downloading a .deb file.
*** IMPORTANT: If any package installation failed due to dependencies, try installing them manually in correct order or locate missing DEBs. ***
  Consider a brief internet connection for 'sudo apt update && sudo apt install -f' if stuck, then go offline again.
  Press ENTER to continue.
-------------------------------------------------------------------
-------------------------------------------------------------------
STEP 3: Miniconda Installation (SKIPPED - Docker will manage Python environments).
  Python environments for JEM AI will be managed inside Docker containers.
  This removes the need for bare-metal Conda/Miniconda setup.
  Press ENTER to continue.
-------------------------------------------------------------------
-------------------------------------------------------------------
STEP 4: Deploy JEM AI Core Services (Dockerized Installation).
  This step sets up Dockerfiles, docker-compose.yml, builds containers, and runs JEM AI's services.
  Please be patient, Docker image builds can take time and generate a lot of output.
  Creating Dockerfile for lt.py backend (JEM AI Core)...
  Creating requirements.txt for lt.py backend...
  Copying lt.py into Docker build context...
Warning: lt.py not found in git_repos. Please manually place it in docker_setup.
  Creating docker-compose.yml for JEM AI services...
  Building JEM AI Docker images... (This might take a while)
WARN[0000] The "OFFLINE_SETUP_DIR" variable is not set. Defaulting to a blank string. 
WARN[0000] /opt/ai_offline_setup/docker_setup/docker-compose.yml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion 
[+] Building 53.4s (12/12) FINISHED                                                                 
 => [internal] load local bake definitions                                                        0.0s
 => => reading from stdin 416B                                                                    0.0s
 => [internal] load build definition from lt-backend.Dockerfile                                   0.0s
 => => transferring dockerfile: 219B                                                              0.0s
 => [internal] load metadata for docker.io/library/python:3.10-slim-bookworm                      3.6s
 => [internal] load .dockerignore                                                                 0.0s
 => => transferring context: 2B                                                                   0.0s
 => [internal] load build context                                                                 0.0s
 => => transferring context: 11.51kB                                                              0.0s
 => [1/5] FROM docker.io/library/python:3.10-slim-bookworm@sha256:9dd6774a1276178f94b0cc1fb1f0edd980825d0ea7634847af9940b1b6273c13 8.7s
 => => resolve docker.io/library/python:3.10-slim-bookworm@sha256:9dd6774a1276178f94b0cc1fb1f0edd980825d0ea7634847af9940b1b6273c13 0.0s
 => => sha256:0ebcc011f0ec7a9a900f7366b104730396a59032e64f04f3867a75f25ed48280 3.51MB / 3.51MB          2.0s
 => => sha256:92d63ec5cbeb1348bad42929919fd8e78f38d96e388b5509d2929d76ddafb48e 15.65MB / 15.65MB        2.7s
 => => sha256:3da95a905ed546f99c4564407923a681757d89651a388ec3f1f5e9bf5ed0b39d 28.23MB / 28.23MB        4.1s
 => => sha256:64b78282ca88b226c404cb8dfdee72b75eea52c9ac7380c0439b6e03992e483f 248B / 248B              0.0s
 => => sha256:c5dbd5ba857839a0aa9db765ea519c1514a40da811b4cf08c852b72fab4379d5 1.75kB / 1.75kB          0.0s
 => => sha256:563dffbdc42507a70677ee28b4bb678ad9074e3c9f75e3043523a38dcdf4f553 5.37kB / 5.37kB          0.0s
 => => extracting sha256:3da95a905ed546f99c4564407923a681757d89651a388ec3f1f5e9bf5ed0b39d            2.4s
 => => extracting sha256:0ebcc011f0ec7a9a900f7366b104730396a59032e64f04f3867a75f25ed48280            0.3s
 => => extracting sha256:92d63ec5cbeb1348ba d42929919fd8e78f38d96e388b5509d2929d76ddafb48e            1.4s
 => => extracting sha256:64b78282ca88b226c404cb8dfdee72b75eea52c9ac7380c0439b6e03992e483f            0.0s
 => [internal] load build context                                                                 0.0s
 => => transferring context: 11.51kB                                                              0.0s
 => [2/5] WORKDIR /app                                                                             0.4s
 => [3/5] COPY requirements.txt .                                                                  0.1s
 => [4/5] RUN pip install --no-cache-dir -r requirements.txt                                      38.1s
 => [5/5] COPY lt.py .                                                                             0.0s
 => exporting to image                                                                            2.2s
 => => exporting layers                                                                           2.2s
 => => writing image sha256:e0d3d08642e507f526ea588444c5947d5a2e5ac4c0791e3b8d9a9e359666fe08          0.0s
 => => naming to docker.io/library/docker_setup-lt-backend                                        0.0s
 => resolving provenance for metadata file                                                        0.0s
[+] Building 1/1
 ✔ lt-backend Built                                                                             0.0s 
 Running JEM AI Docker services...
WARN[0000] The "OFFLINE_SETUP_DIR" variable is not set. Defaulting to a blank string. 
WARN[0000] /opt/ai_offline_setup/docker_setup/docker-compose.yml: the attribute `version` is obsolete, it will be ignored, please remove it to avoid potential confusion 
[+] Running 6/6
 ✔ Container jemai_ollama Started                                                                 4.1s 
 ✔ Container jemai_code_server Started                                                            1.2s 
 ✔ Container jemai_portainer Started                                                              1.4s 
 ✔ Container jemai_jupyter Started                                                                1.6s 
 ✔ Container jemai_lt_backend Started                                                             1.5s 
 ✔ Container jemai_open_webui Started                                                             4.6s 
 Checking status of JEM AI services... (give them a moment to start)
NAME                CONTAINER ID   IMAGE                               COMMAND                  SERVICE             STATUS    PORTS
jemai_code_server   a261885b5974   codercom/code-server:latest         "/usr/bin/entrypoint…"   code-server         running   0.0.0.0:8080->8080/tcp, :::8080->8080/tcp
jemai_jupyter       307223b2072f   jupyter/tensorflow-notebook:latest  "tini -g -- start-no…"   jupyter             running   0.0.0.0:8888->8888/tcp, :::8888->8888/tcp
jemai_lt_backend    e58a74e2d312   docker_setup-lt-backend             "python3 lt.py"          lt-backend          running   0.0.0.0:5000->5000/tcp, :::5000->5000/tcp
jemai_ollama        f58a3ff7038c   ollama/ollama:latest                "/bin/ollama serve"      ollama              running   0.0.0.0:11434->11434/tcp, :::11434->11434/tcp
jemai_open_webui    ab5b31f8f3c7   ghcr.io/open-webui/open-webui:main   "bash start.sh"          open-webui          running   0.0.0.0:3000->8080/tcp, :::3000->8080/tcp
jemai_portainer     087c5b6bda45   portainer/portainer-ce:latest       "/portainer"             portainer           running   8000/tcp, 9443/tcp, 0.0.0.0:9000->9000/tcp, :::9000->9000/tcp
  Press ENTER to continue.
-------------------------------------------------------------------

--- JEM AI Installation Complete! ---
Your local AI OS environment is now operational.
Remember to change all default passwords (Jupyter, Code-Server, Portainer).
For advanced usage, refer to the docker-compose.yml and individual Dockerfiles.
It is recommended to REBOOT your system after this for full stability of Docker and NVIDIA drivers.
Good luck with your JEM AI adventures, Partner!