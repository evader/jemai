\nimport socketio\nimport requests\nimport logging\nimport time\n\nlogging.basicConfig(level=logging.INFO, format='%(asctime)s - DIAG - %(levelname)s - %(message)s')\nlogger = logging.getLogger()\n\n# Test Flask HTTP Server Reachability\ndef test_flask_http(base_url):\n    logger.info(f\"Testing Flask HTTP server at {base_url} ...\")\n    try:\n        r = requests.get(f\"{base_url}/test\", timeout=5)\n        if r.status_code == 200 and r.text == \"Test OK\":\n            logger.info(\"Flask HTTP server reachable and responded correctly.\")\n        else:\n            logger.error(f\"Flask HTTP server responded with unexpected status {r.status_code} or body: {r.text}\")\n    except Exception as e:\n        logger.error(f\"Failed to reach Flask HTTP server: {e}\")\n\n# Test Ollama service reachability\ndef test_ollama(ollama_url):\n    logger.info(f\"Testing Ollama service at {ollama_url} ...\")\n    try:\n        r = requests.head(ollama_url, timeout=5)\n        if r.status_code < 400:\n            logger.info(\"Ollama service reachable.\")\n        else:\n            logger.error(f\"Ollama service responded with HTTP {r.status_code}\")\n    except Exception as e:\n        logger.error(f\"Failed to reach Ollama service: {e}\")\n\n# Test SocketIO connection and query_rag event\ndef test_socketio(base_url):\n    logger.info(f\"Testing SocketIO connection to {base_url} ...\")\n    sio = socketio.Client(logger=False, engineio_logger=False)\n\n    @sio.event\n    def connect():\n        logger.info(\"SocketIO connected.\")\n        # Send a test query to 'query_rag'\n        sio.emit('query_rag', {'query': 'diagnostic test'}, callback=handle_response)\n\n    @sio.event\n    def connect_error(data):\n        logger.error(f\"SocketIO connection failed: {data}\")\n\n    @sio.event\n    def disconnect():\n        logger.info(\"SocketIO disconnected.\")\n\n    def handle_response(data):\n        logger.info(f\"Received response for diagnostic query: {data}\")\n        sio.disconnect()\n\n    try:\n        sio.connect(base_url)\n        # Wait max 15 seconds for test to complete\n        sio.wait(timeout=15)\n    except Exception as e:\n        logger.error(f\"SocketIO test failed: {e}\")\n\nif __name__ == '__main__':\n    flask_base = \"http://jemai.local:5000\"\n    ollama_url = \"http://jemai_prod_ollama:11434\"\n\n    test_flask_http(flask_base)\n    test_ollama(ollama_url)\n    test_socketio(flask_base)\n