\n#!/usr/bin/env python3\nimport requests, sys, os\n\nOLLAMA_HOST = \"http://localhost:11434\"\nSYNAPZ_HOST = \"http://localhost:6000/api\"\n\ndef list_models():\n    try:\n        resp = requests.get(f\"{OLLAMA_HOST}/api/tags\", timeout=10)\n        return [m[\"name\"] for m in resp.json().get(\"models\",[])]\n    except Exception as e:\n        print(\"Error getting models:\", e)\n        return []\n\ndef ollama_chat(model, prompt):\n    r = requests.post(f\"{OLLAMA_HOST}/api/generate\", json={\n        \"model\": model, \"prompt\": prompt, \"stream\": False\n    })\n    r.raise_for_status()\n    return r.json().get(\"response\",\"[No response]\")\n\ndef synapz_pipe(message):\n    try:\n        r = requests.post(f\"{SYNAPZ_HOST}/\", json={\"message\": message})\n        r.raise_for_status()\n        return r.json().get(\"result\") or str(r.json())\n    except Exception as e:\n        return f\"[SYNAPZ ERROR] {e}\"\n\ndef shell(cmd):\n    stream = os.popen(cmd)\n    out = stream.read()\n    stream.close()\n    return out.strip()\n\ndef print_help():\n    print(\"\"\"\nCommands:\n  !cmd <shell>         Run shell command\n  read <fn>            Read file\n  write <fn>           Write file (multi-line, end with Ctrl-D)\n  append <fn>          Append file (multi-line, end with Ctrl-D)\n  !synapz <message>    Pipe to Synapz agent\n  !models              List ollama models\n  !model <name>        Switch ollama model\n  !help                Show this help\n  quit/exit/ctrl-d     Quit\n  (anything else)      AI chat with current model\n\"\"\")\n\ndef main():\n    models = list_models()\n    if not models:\n        print(\"No models found! Start Ollama and download a model.\")\n        sys.exit(1)\n    model = models[0]\n    print(f\"Available models: {models}\")\n    print(f\"Chatting with: {model}\")\n    print_help()\n\n    while True:\n        try:\n            line = input(\"> \").strip()\n        except (EOFError, KeyboardInterrupt):\n            print(\"\\nBye.\")\n            break\n\n        if not line: continue\n        if line.lower() in {\"quit\",\"exit\"}: break\n\n        if line.startswith(\"!cmd \"):\n            out = shell(line[5:])\n            print(out)\n        elif line.startswith(\"read \"):\n            fn = line[5:]\n            try: print(open(fn).read())\n            except Exception as e: print(f\"[ERR] {e}\")\n        elif line.startswith(\"write \"):\n            fn = line[6:]\n            print(f\"Paste content for {fn}, end with Ctrl-D:\")\n            content = sys.stdin.read()\n            with open(fn,\"w\") as f: f.write(content)\n            print(f\"[OK] Wrote {fn}\")\n        elif line.startswith(\"append \"):\n            fn = line[7:]\n            print(f\"Paste content for {fn}, end with Ctrl-D:\")\n            content = sys.stdin.read()\n            with open(fn,\"a\") as f: f.write(content)\n            print(f\"[OK] Appended {fn}\")\n        elif line.startswith(\"!synapz \"):\n            resp = synapz_pipe(line[8:])\n            print(resp)\n        elif line == \"!models\":\n            models = list_models()\n            print(\"Models:\", models)\n        elif line.startswith(\"!model \"):\n            new_model = line[7:]\n            if new_model in models:\n                model = new_model\n                print(f\"Switched to: {model}\")\n            else:\n                print(\"Model not found. Use !models to list.\")\n        elif line == \"!help\":\n            print_help()\n        else:\n            resp = ollama_chat(model, line)\n            print(resp)\n\nif __name__ == \"__main__\":\n    main()\n