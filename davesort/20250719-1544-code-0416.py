\nimport os, sys, time, shutil, traceback\nfrom pathlib import Path\n\nJEMAI_FILENAME = Path(__file__).absolute()\nBACKUP_DIR = Path.home() / \".jemai_versions\"\nBACKUP_DIR.mkdir(exist_ok=True)\n\ndef backup_current_version():\n    ts = time.strftime(\"%Y%m%d_%H%M%S\")\n    backup_file = BACKUP_DIR / f\"jemai_{ts}.py\"\n    shutil.copy2(JEMAI_FILENAME, backup_file)\n    print(f\"[JEMAI] Backup saved: {backup_file}\")\n\ndef smoke_test(new_code):\n    test_file = BACKUP_DIR / \"jemai_test.py\"\n    with open(test_file, \"w\") as f:\n        f.write(new_code)\n    try:\n        import subprocess\n        res = subprocess.run([sys.executable, str(test_file)], timeout=5)\n        if res.returncode == 0:\n            print(\"[JEMAI] Smoke test passed.\")\n            return True\n        else:\n            print(f\"[JEMAI] Smoke test failed (exit {res.returncode}).\")\n            return False\n    except Exception as e:\n        print(f\"[JEMAI] Smoke test error: {e}\")\n        return False\n    finally:\n        test_file.unlink(missing_ok=True)\n\ndef update_self(new_code):\n    backup_current_version()\n    with open(JEMAI_FILENAME, \"w\") as f:\n        f.write(new_code)\n    print(f\"[JEMAI] jemai.py updated! Restarting...\\n\")\n    os.execv(sys.executable, [sys.executable, str(JEMAI_FILENAME)])\n\ndef get_next_upgrade():\n    print(\"\\nPaste or pipe the new JEMAI code below, then press Ctrl-D (or Ctrl-Z+Enter on Windows):\")\n    lines = []\n    while True:\n        try:\n            line = input()\n        except EOFError:\n            break\n        lines.append(line)\n    return \"\\n\".join(lines)\n\ndef main_loop():\n    print(\"[JEMAI] Self-Upgrading Mode. Type 'upgrade' to paste new code, 'rollback' to restore a version, or 'exit'.\")\n    while True:\n        try:\n            cmd = input(\"\\nJEMAI> \").strip()\n            if cmd == \"upgrade\":\n                new_code = get_next_upgrade()\n                if smoke_test(new_code):\n                    update_self(new_code)\n                else:\n                    print(\"[JEMAI] Upgrade aborted. Code not applied.\")\n            elif cmd == \"rollback\":\n                versions = sorted(BACKUP_DIR.glob(\"jemai_*.py\"), reverse=True)\n                for i, v in enumerate(versions):\n                    print(f\"[{i+1}] {v.name}\")\n                sel = input(\"Choose version to restore (number): \")\n                idx = int(sel)-1\n                if 0 <= idx < len(versions):\n                    with open(versions[idx]) as f:\n                        old_code = f.read()\n                    update_self(old_code)\n                else:\n                    print(\"Invalid selection.\")\n            elif cmd == \"exit\":\n                print(\"Bye!\")\n                sys.exit(0)\n            else:\n                print(\"Commands: upgrade, rollback, exit\")\n        except Exception as e:\n            print(\"Error:\", e)\n            traceback.print_exc()\n\nif __name__ == \"__main__\":\n    main_loop()\n