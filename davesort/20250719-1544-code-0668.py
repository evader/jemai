\n# synapz_listener_v1_0.py\n# Synapz Clipboard Listener v1.0\n# Last Updated: 2025-07-18\n# Built by: [AgentName] (pending) for David Lee\n\nimport pyperclip\nimport requests\nimport time\nimport sys\n\n# --- Configuration ---\nMEMORY_API_URLS = [\n    \"http://jemai.local:8089\",\n    \"http://localhost:8089\"\n]\nAPI_USER = \"super\"\nAPI_PASS = \"TechnoAPI69\"\n\nTRIGGERS = {\n    \"JEMAI-SEARCH::\": \"search\",\n    \"JEMAI-GET::\": \"get\",\n    \"JEMAI-CMD::\": \"cmd\",\n    \"JEMAI-ACTION::\": \"action\"\n}\n\ndef try_memory_api(url, endpoint, query):\n    try:\n        auth = (API_USER, API_PASS)\n        full_url = f\"{url}/{endpoint}\"\n        if endpoint == \"search\":\n            params = {\"q\": query, \"limit\": 3}\n            r = requests.get(full_url, params=params, auth=auth, timeout=5)\n        elif endpoint == \"get\":\n            params = {\"idx\": int(query)}\n            r = requests.get(full_url, params=params, auth=auth, timeout=5)\n        else:\n            return None\n        if r.status_code == 200:\n            return r.json()\n        else:\n            return None\n    except Exception:\n        return None\n\ndef main():\n    print(\"=== Synapz Clipboard Listener Started ===\")\n    print(f\"Watching for triggers: {', '.join(TRIGGERS.keys())}\\n\")\n\n    last_clip = \"\"\n    while True:\n        try:\n            clip = pyperclip.paste()\n            if clip != last_clip:\n                last_clip = clip\n                for trigger, action in TRIGGERS.items():\n                    if clip.startswith(trigger):\n                        content = clip[len(trigger):].strip()\n                        print(f\"[Listener] {action.title()} command detected: '{content}'\")\n                        # For demonstration, we just do search/get\n                        if action in [\"search\", \"get\"]:\n                            for url in MEMORY_API_URLS:\n                                result = try_memory_api(url, action, content)\n                                if result:\n                                    print(f\"[Listener] Memory API success at {url}\")\n                                    pyperclip.copy(str(result))\n                                    break\n                            else:\n                                print(f\"[Listener] Memory API failed at all URLs.\")\n                                pyperclip.copy(\"No results found.\")\n                        else:\n                            print(f\"[Listener] No implementation for action '{action}' yet.\")\n            time.sleep(1)\n        except KeyboardInterrupt:\n            print(\"Exiting listener.\")\n            break\n        except Exception as e:\n            print(f\"Error: {e}\", file=sys.stderr)\n            time.sleep(2)\n\nif __name__ == \"__main__\":\n    main()\n