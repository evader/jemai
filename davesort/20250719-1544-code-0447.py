\nimport platform\nimport socket\n\ndef get_jemai_status():\n    lines = []\n    now = datetime.datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n    lines.append(f\"[{now}] JEMAI STATUS\")\n    lines.append(f\"  Host: {platform.node()} ({socket.gethostbyname(socket.gethostname())})\")\n    lines.append(f\"  Python: {platform.python_version()}\")\n    lines.append(f\"  Model: {globals().get('CURRENT_MODEL', 'unknown')}\")\n    lines.append(f\"  Voice: {'ON' if globals().get('VOICE_ENABLED', False) else 'OFF'}\")\n    # Show Ollama health\n    try:\n        import requests\n        resp = requests.get(\"http://localhost:11434/api/tags\", timeout=3)\n        models = [m[\"name\"] for m in resp.json().get(\"models\", [])]\n        lines.append(f\"  Ollama: OK ({len(models)} models: {', '.join(models)[:80]})\")\n    except Exception as e:\n        lines.append(f\"  Ollama: ERROR ({e})\")\n    # Show last upgrade from backups\n    try:\n        files = sorted(os.listdir(VERSIONS_DIR))\n        lines.append(f\"  Upgrades: {len(files)} backups, last: {files[-1] if files else 'none'}\")\n    except Exception as e:\n        lines.append(f\"  Upgrades: error: {e}\")\n    # Add more feature health as you go\n    lines.append(\"-\" * 60)\n    return \"\\n\".join(lines)\n