\n#!/usr/bin/env python3\nimport socket, threading, time, json, os, sys, requests\n\nNODE_ID = socket.gethostname()\nMASTER = os.getenv(\"JEMAI_MASTER\", \"192.168.1.2:8888\")  # set your master IP\n\ndef announce():\n    data = {\n        \"node\": NODE_ID,\n        \"os\": sys.platform,\n        \"capabilities\": [\"ai\", \"shell\", \"file\", \"gpu\" if \"cuda\" in os.popen(\"lspci 2>/dev/null\").read() else \"cpu\"],\n        \"status\": \"online\"\n    }\n    try:\n        requests.post(f\"http://{MASTER}/register\", json=data, timeout=3)\n        print(f\"[{NODE_ID}] Announced to master: {MASTER}\")\n    except Exception as e:\n        print(f\"[{NODE_ID}] Master not reachable ({e})\")\n    threading.Timer(30, announce).start()\n\ndef worker():\n    while True:\n        try:\n            r = requests.get(f\"http://{MASTER}/job/{NODE_ID}\", timeout=3)\n            if r.ok and r.text.strip():\n                job = r.json()\n                print(f\"Got job: {job['cmd']}\")\n                os.system(job[\"cmd\"])\n        except Exception: pass\n        time.sleep(10)\n\nif __name__ == \"__main__\":\n    print(f\"[JEMAI NODE] Booting as {NODE_ID}\")\n    announce()\n    threading.Thread(target=worker, daemon=True).start()\n    while True:\n        cmd = input(\"> \")\n        if cmd.strip() in (\"exit\", \"quit\"): break\n        os.system(cmd)\n