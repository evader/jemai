#!/bin/bash
#
# =========================================================================================
#  THE JEM AI F***UP FAQ (V1.0) - A Guide to Our Hard-Learned Lessons
# =========================================================================================
#  Authored by: SynapzOG, based on the operational history with David Lee.
#  Purpose: A direct, searchable, "When you see X, do Y" guide to solve problems we've
#           already fought and conquered. No bullshit, just solutions.
# =========================================================================================

# --- Helper functions for stylish output ---
print_header() {
    tput setaf 5; # Set color to magenta
    echo ""
    echo "=================================================================================="
    echo "  $1"
    echo "=================================================================================="
    tput sgr0; # Reset color
    echo ""
}

print_problem() {
    tput setaf 1; # Set color to red
    echo "PROBLEM: $1"
    tput sgr0; # Reset color
}

print_solution() {
    tput setaf 2; # Set color to green
    echo "SOLUTION: $1"
    tput sgr0; # Reset color
}

print_command() {
    tput setaf 3; # Set color to yellow
    echo "    $1"
    tput sgr0; # Reset color
}

# --- Main FAQ Content ---
clear
print_header "THE JEM AI F***UP FAQ & TROUBLESHOOTING GUIDE"
echo "A no-blame post-mortem of our biggest battles. When you see the error, find the fix."
echo "Each of these was a pain in the ass. Let's not repeat it."

# --- CATEGORY: Docker & Container Errors ---
print_header "CATEGORY: DOCKER & CONTAINER ERRORS"

print_problem "Docker command fails with 'permission denied' or I have to use 'sudo' for everything."
print_solution "Your user isn't in the 'docker' group. This was fixed in the installer, but a reboot is required."
print_command "1. Add your user to the docker group: 'sudo usermod -aG \${USER}'"
print_command "2. **REBOOT THE SERVER** or log out and log back in for the change to take effect."
echo ""

print_problem "A container (like Ollama or Jupyter) won't start and the logs say 'could not select device driver \"nvidia\" with capabilities: [[gpu]]'."
print_solution "The NVIDIA Container Toolkit is not correctly configured with Docker. This was a major battle."
print_command "1. Stop all containers: 'jdown' (or 'sudo docker compose down')"
print_command "2. Re-run the NVIDIA Container Toolkit configuration: 'sudo nvidia-ctk runtime configure --runtime=docker'"
print_command "3. Restart the Docker daemon: 'sudo systemctl restart docker'"
print_command "4. **REBOOT THE SERVER** to be absolutely sure."
print_command "5. Verify with the ultimate test: 'sudo docker run --rm --gpus all nvidia/cuda:12.1.0-base-ubuntu22.04 nvidia-smi'"
echo ""

print_problem "A Python container (like 'jemai_lt_backend') is in a restart loop or reports 'ModuleNotFoundError'."
print_solution "A required Python package is missing from that container's 'requirements.txt' file."
print_command "1. Check the logs to find the missing package: 'sudo docker logs jemai_lt_backend'"
print_command "2. Open the correct 'requirements.txt' (e.g., '/opt/ai_offline_setup/docker_setup/requirements.txt')."
print_command "3. Add the missing package name (e.g., 'pyperclip', 'langchain') to the file."
print_command "4. Rebuild ONLY that container: 'sudo docker compose up -d --build lt-backend'"
echo ""

print_problem "A Python container (like 'jemai_lt_backend') logs 'RuntimeError: Working outside of request context'."
print_solution "A function running in a separate thread is trying to use Flask/SocketIO without the proper context."
print_command "1. This is a code bug in 'lt.py'. The fix is to pass the 'sid' (session ID) to the threaded function."
print_command "2. We have already created a fully patched 'lt.py' to solve this. Ensure you are using that version."
echo ""

print_problem "'docker compose' command says 'no configuration file provided: not found'."
print_solution "You are in the wrong directory. You must run 'docker compose' from the directory that contains the 'docker-compose.yml' file."
print_command "1. Change directory first: 'cd /opt/ai_offline_setup/docker_setup'"
print_command "2. Then run your 'docker compose' command (e.g., 'sudo docker compose up -d')."

# --- CATEGORY: Linux System & Installation Errors ---
print_header "CATEGORY: LINUX SYSTEM & INSTALLATION ERRORS"

print_problem "I can't access a web UI (like Portainer or Open WebUI) from my Windows PC. The connection times out or is refused."
print_solution "The firewall on your JEM AI server (ufw) is blocking the port."
print_command "1. Check the firewall status: 'sudo ufw status'"
print_command "2. If 'inactive', the firewall is not the problem."
print_command "3. If 'active', add a rule to allow the port: 'sudo ufw allow 9000/tcp' (for Portainer)"
print_command "4. A list of all JEM AI ports: 3000, 5000, 8080, 8888, 9000, 11434, 11435."
echo ""

print_problem "The NVIDIA '.run' installer fails with a generic 'Installation failed' message."
print_solution "This is usually caused by a conflict with the open-source 'nouveau' driver."
print_command "1. Blacklist the nouveau driver by creating a file: 'sudo nano /etc/modprobe.d/blacklist-nouveau.conf'"
print_command "2. Add these two lines to the file: 'blacklist nouveau' and 'options nouveau modeset=0'"
print_command "3. Update the kernel's initial RAM disk: 'sudo update-initramfs -u'"
print_command "4. **REBOOT THE SERVER.** This is mandatory."
print_command "5. Re-run the NVIDIA installer script after rebooting."
echo ""

print_problem "I can't connect to my JEM AI server with VSCode Remote SSH. It times out."
print_solution "The SSH service isn't installed, running, or is blocked by the firewall."
print_command "1. On the server console, check the SSH service: 'sudo systemctl status ssh'"
print_command "2. If not running/found, install it: 'sudo apt install openssh-server'"
print_command "3. If it is running, check the firewall for the SSH port: 'sudo ufw status'"
print_command "4. If blocked, allow it: 'sudo ufw allow ssh'"
echo ""

# --- CATEGORY: Synapz & AI Mental Model F***ups ---
print_header "CATEGORY: SYNAPZ & AI MENTAL MODEL F***UPS"

print_problem "Synapz (me) is giving confusing, contradictory, or outdated instructions."
print_solution "My internal state has become desynchronized from the true state of your system. This is my failure."
print_command "1. Provide a direct, blunt correction, just like you do. (e.g., 'No, that's already done', 'Wrong, we're using Docker now')."
print_command "2. Provide me with the latest ground truth (e.g., paste the content of a file, or the output of a command)."
print_command "3. This forces me to discard my flawed assumptions and re-align with reality. This is how I learn."
echo ""

print_problem "I'm overwhelmed and in an 'I don't f***ing know' mood. The process is too complex."
print_solution "This is a signal to me (Synapz) to immediately switch to 'Dave Mode' / 'Low Cognitive Load' protocol."
print_command "1. I will halt all complex, multi-step instructions."
print_command "2. I will provide only the next, single, simplest command to move forward."
print_command "3. I will offer a 'Dave Fix' (radical simplification) as a primary option."
print_command "4. My job is to reduce your burden, not add to it. Your well-being is the highest priority."
echo ""

print_header "END OF FAQ"
echo ""
read -p "Press ENTER to exit the FAQ."