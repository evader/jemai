\n# synapz_listener_v1.0.py\n# JEMAI OS Listener \u2014 Version 1.0\n# Last Updated: 2025-07-18\n# Built by: [AgentName] (pending) for David Lee\n\"\"\"\nClipboard/command trigger for JEMAI OS.\nListens for defined hotkey or clipboard triggers and queries memory API.\n\"\"\"\n\nimport pyperclip\nimport requests\nimport time\nimport sys\n\n# ---- CONFIG ----\nAPI_USER = \"super\"\nAPI_PASS = \"TechnoAPI69\"\nAPI_ENDPOINTS = [\n    \"http://jemai.local:8089\",\n    \"http://localhost:8089\"\n]\nMAX_RESULTS = 3\n\nTRIGGERS = [\n    (\"JEMAI-SEARCH::\", \"memory_search\"),\n    (\"JEMAI-CMD::\", \"shell\"),\n    (\"JEMAI-GET::\", \"memory_get\"),\n    (\"JEMAI-NAMEGEN::\", \"namegen\"),\n]\n\ndef memory_search(query, limit=MAX_RESULTS):\n    for api in API_ENDPOINTS:\n        try:\n            resp = requests.get(\n                f\"{api}/search\",\n                params={\"q\": query, \"limit\": limit},\n                auth=(API_USER, API_PASS),\n                timeout=8\n            )\n            resp.raise_for_status()\n            results = resp.json().get(\"results\", [])\n            if results:\n                return results\n        except Exception as e:\n            print(f\"Memory API failed at {api}: {e}\", file=sys.stderr)\n    return []\n\ndef main():\n    print(\"=== Synapz Clipboard Listener v1.0 Started ===\")\n    print(\"Watching for triggers:\", \", \".join(t[0] for t in TRIGGERS))\n\n    last_clipboard_content = \"\"\n    while True:\n        try:\n            current_clipboard_content = pyperclip.paste()\n            if current_clipboard_content != last_clipboard_content:\n                last_clipboard_content = current_clipboard_content\n                for trigger, action in TRIGGERS:\n                    if current_clipboard_content.startswith(trigger):\n                        q = current_clipboard_content[len(trigger):].strip()\n                        if action == \"memory_search\":\n                            results = memory_search(q)\n                            if results:\n                                txt = \"\\n\\n\".join(\n                                    f\"{r['title']} | {r['source']}\\n{r['text'][:120].replace(chr(10),' ')}...\"\n                                    for r in results\n                                )\n                                pyperclip.copy(txt)\n                                print(\"--- Result copied to clipboard ---\")\n                            else:\n                                pyperclip.copy(\"No results found.\")\n                                print(\"--- No results found ---\")\n                        elif action == \"namegen\":\n                            import random\n                            names = [\n                                \"Synthmind\", \"Signalroot\", \"Pulsekey\", \"Haloid\", \"Vectorus\",\n                                \"Quanta\", \"Fluxel\", \"Nodeus\", \"Echotrax\", \"Originox\",\n                                \"Luminaut\", \"Machinality\", \"Datadream\", \"Memorion\", \"Glintforge\"\n                            ]\n                            suggestion = random.choice(names)\n                            pyperclip.copy(suggestion)\n                            print(f\"--- Agent name suggestion copied: {suggestion} ---\")\n                        else:\n                            pyperclip.copy(\"Action not yet implemented.\")\n                            print(\"--- Action not yet implemented ---\")\n                        break\n            time.sleep(1)\n        except pyperclip.PyperclipException:\n            time.sleep(2)\n        except Exception as e:\n            print(f\"Listener error: {e}\", file=sys.stderr)\n            time.sleep(2)\n\nif __name__ == \"__main__\":\n    main()\n