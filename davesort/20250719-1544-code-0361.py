\n#!/usr/bin/env python3\nimport os, sys, subprocess, platform, time\n\ndef detect_os():\n    if sys.platform.startswith('linux'):\n        return \"linux\"\n    elif sys.platform.startswith('darwin'):\n        return \"mac\"\n    elif sys.platform.startswith('win'):\n        return \"windows\"\n    return \"unknown\"\n\ndef run(cmd):\n    print(f\"Running: {cmd}\")\n    r = subprocess.run(cmd, shell=True)\n    if r.returncode != 0:\n        print(f\"[!] Failed: {cmd}\")\n        sys.exit(1)\n\ndef main():\n    print(\"== JEMAI-OS BOOTSTRAP ==\")\n    os_type = detect_os()\n    print(f\"Detected OS: {os_type}\")\n\n    # Step 1: Basic deps\n    if os_type == \"linux\":\n        run(\"sudo apt update && sudo apt install -y python3-pip git curl\")\n    elif os_type == \"mac\":\n        run(\"brew install python3 git curl\")\n    elif os_type == \"windows\":\n        print(\"Install Python3/Git manually, then rerun. (TODO: Add winget support)\")\n        time.sleep(2)\n\n    # Step 2: Pip deps\n    run(\"python3 -m pip install --upgrade pip\")\n    run(\"python3 -m pip install flask requests chromadb openai rich\")\n    \n    # Step 3: Ollama install\n    print(\"Checking for Ollama...\")\n    if not os.path.exists(\"/usr/local/bin/ollama\") and os_type == \"linux\":\n        run(\"curl -fsSL https://ollama.com/install.sh | sh\")\n    # For Mac and Win, TODO: add installer support\n\n    # Step 4: Synapz/Core agent\n    print(\"Setting up Synapz core agent...\")\n    if not os.path.exists(\"synapz_core.py\"):\n        run(\"git clone https://github.com/dl-ai/synapz_core.git || true\")  # Replace with your repo\n        run(\"cp synapz_core/synapz_core.py .\")\n    # Launch agent\n    subprocess.Popen([\"python3\", \"synapz_core.py\"])\n\n    # Step 5: AI shell\n    print(\"Booting jemai_shell...\")\n    if not os.path.exists(\"jemai_shell.py\"):\n        # Download or copy in actual deployment\n        run(\"curl -O https://your-server/jemai_shell.py || true\")\n    subprocess.Popen([\"python3\", \"jemai_shell.py\"])\n\n    print(\"[JEMAI BOOTSTRAP DONE]\")\n    print(\"Press any key to keep building, or '.' for next block.\")\n    while True:\n        user_in = input(\"> \").strip()\n        if user_in == \".\":\n            print(\"Continuing build...\")\n            # Continue/extend via next AI agent or code block\n        else:\n            print(\"Ready. Paste next code, command, or feature to add.\")\n\nif __name__ == \"__main__\":\n    main()\n