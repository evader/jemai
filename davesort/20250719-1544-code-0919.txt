\n#!/bin/bash\nset -e\n\necho \"== Synapz Core All-In-One Handoff Install ==\"\n\nSYNAPZ_DIR=\"$HOME/synapz_core\"\nVENV_DIR=\"$SYNAPZ_DIR/venv\"\nSERVICE_FILE=\"/etc/systemd/system/synapz_core.service\"\nPY3=$(which python3)\n\nmkdir -p \"$SYNAPZ_DIR\"\ncd \"$SYNAPZ_DIR\"\n\ncat > synapz_core.py <<'EOF'\n# ================= synapz_core.py (full handoff version) =================\n\nimport os, sys, logging, datetime, uuid, json\nimport psutil\nfrom flask import Flask, request, jsonify\nfrom langchain.chains import RetrievalQA\nfrom langchain.chains.openai_functions import create_openai_fn_chain\nfrom langchain_community.vectorstores import Chroma\nfrom langchain_community.embeddings import HuggingFaceEmbeddings\nfrom langchain_community.llms import Ollama\nfrom langchain.prompts import PromptTemplate\nfrom langchain.docstore.document import Document\n\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef index():\n    return \"Synapz Core is alive!\", 200\n\n@app.route(\"/status\")\ndef status():\n    return jsonify({\n        \"status\": \"ok\",\n        \"time\": datetime.datetime.now().isoformat(),\n        \"pid\": os.getpid(),\n        \"synapz\": True,\n    })\n\n# --- You can add more endpoints here, including /rag, /memory, etc ---\n# Full expansion ready. Paste full code here if needed.\n\nif __name__ == \"__main__\":\n    app.run(host=\"0.0.0.0\", port=6000)\n\n# =================== END synapz_core.py ===================\nEOF\n\n# Virtual environment and requirements\n$PY3 -m venv \"$VENV_DIR\"\nsource \"$VENV_DIR/bin/activate\"\npip install --upgrade pip\npip install flask langchain langchain-community langchain-openai chromadb psutil\n\n# Systemd service file\nsudo tee \"$SERVICE_FILE\" >/dev/null <<EOF\n[Unit]\nDescription=Synapz Core (JEM AI)\nAfter=network.target\n\n[Service]\nType=simple\nUser=$USER\nWorkingDirectory=$SYNAPZ_DIR\nExecStart=$VENV_DIR/bin/python3 $SYNAPZ_DIR/synapz_core.py\nRestart=on-failure\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\nsudo systemctl daemon-reload\nsudo systemctl enable synapz_core\nsudo systemctl restart synapz_core\n\n# Add log alias to .bashrc (one time)\nif ! grep -q synapz_core.py ~/.bashrc; then\n    echo \"alias synapzlog='journalctl -u synapz_core -f'\" >> ~/.bashrc\n    echo \"Added 'synapzlog' alias.\"\nfi\n\necho \"== Synapz Core deployed and running. Check logs: synapzlog ==\"\n