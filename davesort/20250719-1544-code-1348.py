\nfrom flask import Flask, render_template_string, request, jsonify\nimport requests\n\napp = Flask(__name__)\n\nSYNAPZ_API_URL = \"http://localhost:11436/query\"\n\nHTML = \"\"\"\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\" />\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n<title>Synapz Chat UI</title>\n<style>\n  body, html {\n    margin: 0; padding: 0; height: 100%; font-family: Arial, sans-serif;\n    background: #121212;\n    color: #eee;\n    display: flex; flex-direction: column; justify-content: space-between;\n  }\n  #chat-container {\n    flex-grow: 1;\n    padding: 20px;\n    overflow-y: auto;\n    background: #222;\n  }\n  .message {\n    max-width: 70%;\n    margin-bottom: 15px;\n    padding: 10px 15px;\n    border-radius: 20px;\n    line-height: 1.4;\n    font-size: 1.1em;\n    word-wrap: break-word;\n  }\n  .user {\n    background: #4caf50;\n    color: #fff;\n    margin-left: auto;\n    text-align: right;\n  }\n  .synapz {\n    background: #333;\n    color: #ccc;\n    margin-right: auto;\n    text-align: left;\n  }\n  #input-container {\n    display: flex;\n    border-top: 1px solid #444;\n    background: #121212;\n  }\n  #user-input {\n    flex-grow: 1;\n    padding: 15px;\n    border: none;\n    font-size: 1.1em;\n    background: #222;\n    color: #eee;\n    outline: none;\n  }\n  #send-btn {\n    padding: 0 20px;\n    background: #4caf50;\n    border: none;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n  }\n  #send-btn:hover {\n    background: #45a049;\n  }\n  /* Canvas background */\n  #background-canvas {\n    position: fixed;\n    top: 0; left: 0; right: 0; bottom: 0;\n    z-index: -1;\n    background: #121212;\n  }\n</style>\n</head>\n<body>\n<canvas id=\"background-canvas\"></canvas>\n<div id=\"chat-container\"></div>\n<div id=\"input-container\">\n  <input type=\"text\" id=\"user-input\" placeholder=\"Ask Synapz...\" autocomplete=\"off\" />\n  <button id=\"send-btn\">Send</button>\n</div>\n\n<script>\n  const chatContainer = document.getElementById(\"chat-container\");\n  const userInput = document.getElementById(\"user-input\");\n  const sendBtn = document.getElementById(\"send-btn\");\n\n  function appendMessage(text, sender) {\n    const div = document.createElement(\"div\");\n    div.classList.add(\"message\", sender);\n    div.textContent = text;\n    chatContainer.appendChild(div);\n    chatContainer.scrollTop = chatContainer.scrollHeight;\n  }\n\n  async function sendQuery() {\n    const query = userInput.value.trim();\n    if (!query) return;\n    appendMessage(query, \"user\");\n    userInput.value = \"\";\n    try {\n      const response = await fetch(\"/send\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ query }),\n      });\n      const data = await response.json();\n      if (data.response) {\n        appendMessage(data.response, \"synapz\");\n      } else {\n        appendMessage(\"Error: No response\", \"synapz\");\n      }\n    } catch (e) {\n      appendMessage(\"Error: \" + e.message, \"synapz\");\n    }\n  }\n\n  sendBtn.addEventListener(\"click\", sendQuery);\n  userInput.addEventListener(\"keydown\", e => {\n    if (e.key === \"Enter\") sendQuery();\n  });\n\n  // Canvas animation\n  const canvas = document.getElementById(\"background-canvas\");\n  const ctx = canvas.getContext(\"2d\");\n  let width, height;\n  function resize() {\n    width = window.innerWidth;\n    height = window.innerHeight;\n    canvas.width = width;\n    canvas.height = height;\n  }\n  window.addEventListener(\"resize\", resize);\n  resize();\n\n  // Simple swirling dots animation\n  const dots = [];\n  const DOT_COUNT = 50;\n  for (let i = 0; i < DOT_COUNT; i++) {\n    dots.push({\n      x: Math.random() * width,\n      y: Math.random() * height,\n      radius: Math.random() * 2 + 1,\n      angle: Math.random() * Math.PI * 2,\n      speed: 0.01 + Math.random() * 0.02,\n      orbitRadius: 50 + Math.random() * 100,\n      centerX: Math.random() * width,\n      centerY: Math.random() * height,\n    });\n  }\n  function animate() {\n    ctx.clearRect(0, 0, width, height);\n    ctx.fillStyle = \"#4caf50\";\n    dots.forEach(dot => {\n      dot.angle += dot.speed;\n      const x = dot.centerX + Math.cos(dot.angle) * dot.orbitRadius;\n      const y = dot.centerY + Math.sin(dot.angle) * dot.orbitRadius;\n      ctx.beginPath();\n      ctx.arc(x, y, dot.radius, 0, Math.PI * 2);\n      ctx.fill();\n    });\n    requestAnimationFrame(animate);\n  }\n  animate();\n</script>\n</body>\n</html>\n\"\"\"\n\n@app.route(\"/\")\ndef index():\n    return render_template_string(HTML)\n\n@app.route(\"/send\", methods=[\"POST\"])\ndef send():\n    data = request.get_json()\n    query = data.get(\"query\", \"\")\n    if not query:\n        return jsonify({\"response\": \"No query provided.\"})\n    try:\n        resp = requests.post(SYNAPZ_API_URL, json={\"query\": query}, timeout=30)\n        resp.raise_for_status()\n        result = resp.json()\n        return jsonify({\"response\": result.get(\"response\", \"No response.\")})\n    except Exception as e:\n        return jsonify({\"response\": f\"Error: {str(e)}\"})\n\nif __name__ == \"__main__\":\n    app.run(host=\"0.0.0.0\", port=5000)\n