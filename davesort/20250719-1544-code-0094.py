\n#!/usr/bin/env python3\nimport subprocess\nfrom flask import Flask, request, jsonify\nimport logging\nimport os\nfrom datetime import datetime\n\n# === CONFIG ===\nAUTH_TOKEN = \"changeme-supersecret-token\"  # CHANGE THIS IMMEDIATELY\nBIND_HOST = \"127.0.0.1\"\nBIND_PORT = 6060\nLOG_FILE = \"/home/jemai/synapz_core/shell_agent.log\"\n\n# === LOGGING ===\nlogging.basicConfig(filename=LOG_FILE, level=logging.INFO,\n    format=\"%(asctime)s [%(levelname)s] %(message)s\")\n\napp = Flask(__name__)\n\ndef logit(msg):\n    logging.info(msg)\n    print(msg)\n\n@app.route(\"/ping\", methods=[\"GET\"])\ndef ping():\n    return jsonify({\"ok\": True, \"msg\": \"Shell agent online.\"})\n\n@app.route(\"/run\", methods=[\"POST\"])\ndef run_command():\n    data = request.get_json(force=True)\n    token = data.get(\"token\")\n    cmd = data.get(\"cmd\")\n    if token != AUTH_TOKEN:\n        logit(f\"AUTH FAIL from {request.remote_addr} for: {cmd}\")\n        return jsonify({\"ok\": False, \"error\": \"auth_failed\"}), 401\n\n    if not cmd or not isinstance(cmd, str):\n        return jsonify({\"ok\": False, \"error\": \"bad_command\"}), 400\n\n    logit(f\"RUN [{request.remote_addr}] {cmd}\")\n    try:\n        result = subprocess.run(cmd, shell=True, capture_output=True, text=True, timeout=60)\n        out = result.stdout.strip()\n        err = result.stderr.strip()\n        code = result.returncode\n        logit(f\"RESULT {code} | OUT: {out[:100]}... ERR: {err[:100]}...\")\n        return jsonify({\n            \"ok\": True,\n            \"exit\": code,\n            \"out\": out,\n            \"err\": err\n        })\n    except Exception as ex:\n        logit(f\"EXCEPTION: {ex}\")\n        return jsonify({\"ok\": False, \"error\": str(ex)}), 500\n\nif __name__ == \"__main__\":\n    logit(f\"=== Shell Agent started at {datetime.now()} ===\")\n    app.run(host=BIND_HOST, port=BIND_PORT)\n