\n# main_cli_with_synapz.py\n\nimport sys\nimport os\n\n# ----- Synapz Core -----\nclass SynapzCore:\n    def __init__(self):\n        self.status = \"running\"\n    def check_status(self):\n        # Example system check, expand as needed\n        return f\"[Synapz] System status: {self.status}\"\n    def fix_models(self):\n        # Placeholder for actual fix logic\n        return \"[Synapz] (Pretend) Fixed Ollama models.\"\n    def run_shell(self, command):\n        try:\n            output = os.popen(command).read()\n            return f\"[Synapz Shell]\\n{output}\"\n        except Exception as e:\n            return f\"[Synapz ERROR]: {e}\"\n\nsynapz = SynapzCore()\n\n# ----- CLI Loop -----\ndef print_help():\n    print(\"\"\"\nCommands:\n  !cmd <shell>            Run a shell command\n  read <fn>               Read file\n  write <fn>              Write file (then paste, Ctrl-D to save)\n  append <fn>             Append file (then paste, Ctrl-D to save)\n  !synapz <cmd>           Synapz core commands (!synapz help for options)\n  <anything else>         AI chat (to model, placeholder)\n\"\"\")\n\ndef main():\n    print(\"CLI + Synapz (native mode). Type 'help' or Ctrl+C to quit.\")\n    while True:\n        try:\n            inp = input(\"> \").strip()\n            if not inp: continue\n            if inp in (\"help\", \"?\"):\n                print_help()\n            elif inp.startswith(\"!cmd\"):\n                cmd = inp[len(\"!cmd\"):].strip()\n                print(os.popen(cmd).read())\n            elif inp.startswith(\"read \"):\n                fn = inp[5:].strip()\n                try:\n                    with open(fn, \"r\") as f: print(f.read())\n                except Exception as e:\n                    print(f\"[ERR] {e}\")\n            elif inp.startswith(\"write \"):\n                fn = inp[6:].strip()\n                print(\"[Paste. Ctrl-D to save]\")\n                data = sys.stdin.read()\n                with open(fn, \"w\") as f: f.write(data)\n                print(\"[Saved]\")\n            elif inp.startswith(\"append \"):\n                fn = inp[7:].strip()\n                print(\"[Paste. Ctrl-D to save]\")\n                data = sys.stdin.read()\n                with open(fn, \"a\") as f: f.write(data)\n                print(\"[Appended]\")\n            elif inp.startswith(\"!synapz\"):\n                cmd = inp[len(\"!synapz\"):].strip()\n                if cmd == \"help\":\n                    print(\"!synapz check_status\\n!synapz fix_models\\n!synapz shell <cmd>\")\n                elif cmd == \"check_status\":\n                    print(synapz.check_status())\n                elif cmd == \"fix_models\":\n                    print(synapz.fix_models())\n                elif cmd.startswith(\"shell \"):\n                    print(synapz.run_shell(cmd[len(\"shell \"):]))\n                else:\n                    print(\"[Synapz] Unknown command.\")\n            else:\n                # Placeholder for AI chat\n                print(f\"[AI]: {inp} (imagine model response here)\")\n        except (EOFError, KeyboardInterrupt):\n            print(\"\\n[Exiting]\")\n            break\n\nif __name__ == \"__main__\":\n    main()\n